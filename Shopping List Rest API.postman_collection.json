{
	"info": {
		"_postman_id": "ccae275a-6c37-4455-8e58-852fc0553c2e",
		"name": "Shopping List Rest API",
		"description": "This is a basic REST API powered by a Flask App. It deals with the creation of various shopping lists by users through the ability to store items within various types of lists. e.g: Grocery List, vs Holiday Shopping List, etc.\n\n# Overview\n\nThis documentation is generated by Postman, any endpoints are described below. \n\n# Authentication\n\nThis API makes use JWT authentication, and some endpoints require a valid JWT access token.\n\n# Configuration\n\nUse of this collection requires several predefined environment variables, listed below. Please add them to your own environment when testing.\n\n- `url`: The root url for Flask app with a default value that should be `127.0.0.1:5000`.\n- `test_email`: An email address is needed to register and confirm users in the app for use and testing. Must be reachable by MailGun services.\n- `confirmation_id`: (optional) ConfirmationModel id. UUID4 identifier for confirmations will be automatically set by some of the test scripts in the requests.\n- `access_token`: (optional) JWTs used for login, will be automatically set by some of the test scripts in the requests.\n- `refresh_token`: (optional) Used for refreshing a JWT, and is automatically set by some of the test scripts in the requests.\n\n# Error Codes\n\n- 400: occurs when a bad request is made\n- 401: occurs when authentification is unsuccessful\n- 404: occurs when the requested element/data cannot be found\n- 500: covers any other unexpected errors",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "users",
			"item": [
				{
					"name": "find user by id",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "764f3af4-56d1-43ab-b342-df6c3204f626",
								"type": "text/javascript",
								"exec": [
									"var jsonData = pm.response.json();",
									"pm.test(\"user confirmation found\", function () {",
									"    pm.expect(jsonData.confirmation).not.eql(undefined);",
									"});",
									"",
									"if (jsonData.confirmation !== undefined) {",
									"    pm.environment.set(\"confirmation_id\", jsonData.confirmation.id);",
									"}"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/user/1",
							"host": [
								"{{url}}"
							],
							"path": [
								"user",
								"1"
							]
						},
						"description": "Find a user by its id."
					},
					"response": [
						{
							"name": "get user by id",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{url}}/user/1",
									"host": [
										"{{url}}"
									],
									"path": [
										"user",
										"1"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Length",
									"value": "242",
									"name": "Content-Length",
									"description": "The length of the response body in octets (8-bit bytes)"
								},
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "The mime type of this content"
								},
								{
									"key": "Date",
									"value": "Thu, 24 May 2018 18:31:14 GMT",
									"name": "Date",
									"description": "The date and time that the message was sent"
								},
								{
									"key": "Server",
									"value": "Werkzeug/0.14.1 Python/3.6.1",
									"name": "Server",
									"description": "A name for the server"
								}
							],
							"cookie": [],
							"body": "{\n    \"id\": 1,\n    \"username\": \"tyler\",\n    \"email\": \"tylersemail@gmail.com\",\n    \"confirmation\": {\n        \"id\": \"2y25ks7a336c3d54eg824hd1x54hhsg6\",\n        \"expire_at\": \"1637156371\",\n        \"user_id\": 1,\n        \"confirmed\": false\n    }\n}\n"
						},
						{
							"name": "user not found",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{url}}/user/2",
									"host": [
										"{{url}}"
									],
									"path": [
										"user",
										"2"
									]
								}
							},
							"status": "NOT FOUND",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Length",
									"value": "36",
									"name": "Content-Length",
									"description": "The length of the response body in octets (8-bit bytes)"
								},
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "The mime type of this content"
								},
								{
									"key": "Date",
									"value": "Thu, 24 May 2018 18:32:24 GMT",
									"name": "Date",
									"description": "The date and time that the message was sent"
								},
								{
									"key": "Server",
									"value": "Werkzeug/0.14.1 Python/3.6.1",
									"name": "Server",
									"description": "A name for the server"
								}
							],
							"cookie": [],
							"body": "{\n    \"message\": \"User not found\"\n}\n"
						}
					]
				},
				{
					"name": "get all confirmations by user id",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "2108e1bc-9a4b-42ca-b122-601d85be5872",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/confirmation/user/1",
							"host": [
								"{{url}}"
							],
							"path": [
								"confirmation",
								"user",
								"1"
							]
						},
						"description": "Get a list of all confirmations of the specified user."
					},
					"response": [
						{
							"name": "get all confirmations by user id",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{url}}/confirmation/user/1",
									"host": [
										"{{url}}"
									],
									"path": [
										"confirmation",
										"user",
										"1"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Length",
									"value": "404",
									"name": "Content-Length",
									"description": "The length of the response body in octets (8-bit bytes)"
								},
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "The mime type of this content"
								},
								{
									"key": "Date",
									"value": "Thu, 24 May 2018 18:33:49 GMT",
									"name": "Date",
									"description": "The date and time that the message was sent"
								},
								{
									"key": "Server",
									"value": "Werkzeug/0.14.1 Python/3.6.1",
									"name": "Server",
									"description": "A name for the server"
								}
							],
							"cookie": [],
							"body": "{\n    \"current_time\": 1527186829,\n    \"confirmation\": [\n        {\n            \"id\": \"1f17df9b558a4c25ae935cc2e33ccfb7\",\n            \"expire_at\": \"1527093886\",\n            \"user_id\": 1,\n            \"confirmed\": false\n        },\n        {\n            \"id\": \"eef67ce47ef74397b2fc782930a20f02\",\n            \"expire_at\": \"1527188509\",\n            \"user_id\": 1,\n            \"confirmed\": true\n        }\n    ]\n}\n"
						}
					]
				},
				{
					"name": "register a new user",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"username\": \"tyler\",\n\t\"email\": \"tktran11@yahoo.com\",\n\t\"password\": \"kapital\"\n}"
						},
						"url": {
							"raw": "{{url}}/register",
							"host": [
								"{{url}}"
							],
							"path": [
								"register"
							]
						},
						"description": "Registers a new user by sending a confirmation email\r\nto the user's email address."
					},
					"response": [
						{
							"name": "register using a duplicate email",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"username\": \"tyler\",\n\t\"email\": \"your@second_email.net\",\n\t\"password\": \"1234\"\n}"
								},
								"url": {
									"raw": "{{url}}/register",
									"host": [
										"{{url}}"
									],
									"path": [
										"register"
									]
								}
							},
							"status": "BAD REQUEST",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Length",
									"value": "59",
									"name": "Content-Length",
									"description": "The length of the response body in octets (8-bit bytes)"
								},
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "The mime type of this content"
								},
								{
									"key": "Date",
									"value": "Wed, 23 May 2018 16:05:41 GMT",
									"name": "Date",
									"description": "The date and time that the message was sent"
								},
								{
									"key": "Server",
									"value": "Werkzeug/0.14.1 Python/3.6.1",
									"name": "Server",
									"description": "A name for the server"
								}
							],
							"cookie": [],
							"body": "{\n    \"message\": \"A user with that email already exists\"\n}\n"
						},
						{
							"name": "register a new user",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"username\": \"tyler\",\n\t\"email\": \"your@email.com\",\n\t\"password\": \"1234\"\n}"
								},
								"url": {
									"raw": "{{url}}/register",
									"host": [
										"{{url}}"
									],
									"path": [
										"register"
									]
								}
							},
							"status": "CREATED",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Length",
									"value": "48",
									"name": "Content-Length",
									"description": "The length of the response body in octets (8-bit bytes)"
								},
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "The mime type of this content"
								},
								{
									"key": "Date",
									"value": "Wed, 23 May 2018 15:55:58 GMT",
									"name": "Date",
									"description": "The date and time that the message was sent"
								},
								{
									"key": "Server",
									"value": "Werkzeug/0.14.1 Python/3.6.1",
									"name": "Server",
									"description": "A name for the server"
								}
							],
							"cookie": [],
							"body": "{\n    \"message\": \"User created successfully.\"\n}\n"
						},
						{
							"name": "register using a duplicate username",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"username\": \"i_already_exist\",\n\t\"email\": \"random@email.com\",\n\t\"password\": \"1234\"\n}"
								},
								"url": {
									"raw": "{{url}}/register",
									"host": [
										"{{url}}"
									],
									"path": [
										"register"
									]
								}
							},
							"status": "BAD REQUEST",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Length",
									"value": "62",
									"name": "Content-Length",
									"description": "The length of the response body in octets (8-bit bytes)"
								},
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "The mime type of this content"
								},
								{
									"key": "Date",
									"value": "Wed, 23 May 2018 16:04:58 GMT",
									"name": "Date",
									"description": "The date and time that the message was sent"
								},
								{
									"key": "Server",
									"value": "Werkzeug/0.14.1 Python/3.6.1",
									"name": "Server",
									"description": "A name for the server"
								}
							],
							"cookie": [],
							"body": "{\n    \"message\": \"A user with that username already exists\"\n}\n"
						}
					]
				},
				{
					"name": "login",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "3a1aa39a-b148-4037-932b-171d4ab336a5",
								"exec": [
									"var jsonData = pm.response.json();",
									"pm.test(\"access_token not empty\", function () {",
									"    pm.expect(jsonData.access_token).not.eql(undefined);",
									"});",
									"",
									"pm.test(\"refresh token not empty\", function () {",
									"    pm.expect(jsonData.refresh_token).not.eql(undefined);",
									"});",
									"// set access token as environement variable",
									"if (jsonData.access_token !== undefined) {",
									"    postman.setEnvironmentVariable(\"access_token\", jsonData.access_token);",
									"} else {",
									"    postman.setEnvironmentVariable(\"access_token\", null);",
									"}",
									"// set refresh token as environement variable",
									"if (jsonData.refresh_token !== undefined) {",
									"    postman.setEnvironmentVariable(\"refresh_token\", jsonData.refresh_token);",
									"} else {",
									"    postman.setEnvironmentVariable(\"refresh_token\", null);",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"username\" : \"tyler\",\n  \"password\" : \"kapital\"\n}"
						},
						"url": {
							"raw": "{{url}}/login",
							"host": [
								"{{url}}"
							],
							"path": [
								"login"
							]
						},
						"description": "Login using username and password. If authenticated, an active fresh `access_token` as well as a `refresh_token` will be issued."
					},
					"response": [
						{
							"name": "login failed",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"username\" : \"tyler\",\n  \"password\" : \"password\"\n}"
								},
								"url": {
									"raw": "{{url}}/login",
									"host": [
										"{{url}}"
									],
									"path": [
										"login"
									]
								}
							},
							"status": "UNAUTHORIZED",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Length",
									"value": "42",
									"name": "Content-Length",
									"description": "The length of the response body in octets (8-bit bytes)"
								},
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "The mime type of this content"
								},
								{
									"key": "Date",
									"value": "Wed, 23 May 2018 16:13:14 GMT",
									"name": "Date",
									"description": "The date and time that the message was sent"
								},
								{
									"key": "Server",
									"value": "Werkzeug/0.14.1 Python/3.6.1",
									"name": "Server",
									"description": "A name for the server"
								}
							],
							"cookie": [],
							"body": "{\n    \"message\": \"Invalid Credentials!\"\n}\n"
						},
						{
							"name": "login before confirming registration",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"username\" : \"tyler\",\n  \"password\" : \"abcd\"\n}"
								},
								"url": {
									"raw": "{{url}}/login",
									"host": [
										"{{url}}"
									],
									"path": [
										"login"
									]
								}
							},
							"status": "BAD REQUEST",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Length",
									"value": "108",
									"name": "Content-Length",
									"description": "The length of the response body in octets (8-bit bytes)"
								},
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "The mime type of this content"
								},
								{
									"key": "Date",
									"value": "Wed, 23 May 2018 16:16:00 GMT",
									"name": "Date",
									"description": "The date and time that the message was sent"
								},
								{
									"key": "Server",
									"value": "Werkzeug/0.14.1 Python/3.6.1",
									"name": "Server",
									"description": "A name for the server"
								}
							],
							"cookie": [],
							"body": "{\n    \"message\": \"You have not confirmed registration, please check your email <tylersemail@gmail.com>.\"\n}\n"
						},
						{
							"name": "login successfully",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"username\" : \"jose\",\n  \"password\" : \"1234\"\n}"
								},
								"url": {
									"raw": "{{url}}/login",
									"host": [
										"{{url}}"
									],
									"path": [
										"login"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Length",
									"value": "570",
									"name": "Content-Length",
									"description": "The length of the response body in octets (8-bit bytes)"
								},
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "The mime type of this content"
								},
								{
									"key": "Date",
									"value": "Wed, 23 May 2018 16:12:22 GMT",
									"name": "Date",
									"description": "The date and time that the message was sent"
								},
								{
									"key": "Server",
									"value": "Werkzeug/0.14.1 Python/3.6.1",
									"name": "Server",
									"description": "A name for the server"
								}
							],
							"cookie": [],
							"body": "{\n    \"access_token\": \"eytOLXAiOzJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpYXQiOjE1MjcwOTE5NDIsIm4iZiI7MTUyNzA5MTk0MiwianRpIjoiOWUxZjQxMzUtODU0Ny00MWYzLWJkNjMtMzRiYzcyNDc1MmI0IiwiZXhwIjoxNTI3MDkyODQyLCJpZGVudGl0eSI6MSwiZnJlc2giOnRydWUsInR5cGUiOiJhY2Nlc3MifQ.ekXY9wyn50mQ2xk5smTUL10b5igKoY_placeholder\",\n    \"refresh_token\": \"eytOLXAiOzJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpYXQiOjE1MjcwOTE5NDIsIm4iZiI7MTUyNzA5MTk0MiwianRpIjoiYmY4YjhmZjktYjMxMC00NDJjLTg4MzAtZjU2MzdkNTU1OGE5IiwiZXhwIjoxNTI5NjgzOTQyLCJpZGVudGl0eSI6MSwidHlwZSI6InJlZnJlc2gifQ.d1D-QnRfZTgNJBrAUSJXu4J8GZ1tmD_placeholder\"\n}"
						}
					]
				},
				{
					"name": "logout",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "d1f524a7-c172-476f-99d0-1c101ff74771",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{url}}/logout",
							"host": [
								"{{url}}"
							],
							"path": [
								"logout"
							]
						},
						"description": "Logout a user."
					},
					"response": [
						{
							"name": "logout",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{access_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{url}}/logout",
									"host": [
										"{{url}}"
									],
									"path": [
										"logout"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Length",
									"value": "58",
									"name": "Content-Length",
									"description": "The length of the response body in octets (8-bit bytes)"
								},
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "The mime type of this content"
								},
								{
									"key": "Date",
									"value": "Thu, 24 May 2018 18:32:11 GMT",
									"name": "Date",
									"description": "The date and time that the message was sent"
								},
								{
									"key": "Server",
									"value": "Werkzeug/0.14.1 Python/3.6.1",
									"name": "Server",
									"description": "A name for the server"
								}
							],
							"cookie": [],
							"body": "{\n    \"message\": \"User <id=1> successfully logged out.\"\n}\n"
						}
					]
				},
				{
					"name": "refresh token",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "d0cce65b-45d4-444d-8e3f-0cc765a1878e",
								"type": "text/javascript",
								"exec": [
									"var jsonData = pm.response.json();",
									"pm.test(\"access_token not empty\", function () {",
									"    pm.expect(jsonData.access_token).not.eql(undefined);",
									"});",
									"// set access token as environement variable",
									"if (jsonData.access_token !== undefined) {",
									"    postman.setEnvironmentVariable(\"access_token\", jsonData.access_token);",
									"} else {",
									"    postman.setEnvironmentVariable(\"access_token\", null);",
									"}"
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{refresh_token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{url}}/refresh",
							"host": [
								"{{url}}"
							],
							"path": [
								"refresh"
							]
						},
						"description": "Use the `refresh_token` to get a new active non-fresh `access_token`."
					},
					"response": [
						{
							"name": "refresh token",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{refresh_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{url}}/refresh",
									"host": [
										"{{url}}"
									],
									"path": [
										"refresh"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Length",
									"value": "295",
									"name": "Content-Length",
									"description": "The length of the response body in octets (8-bit bytes)"
								},
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "The mime type of this content"
								},
								{
									"key": "Date",
									"value": "Thu, 24 May 2018 18:32:57 GMT",
									"name": "Date",
									"description": "The date and time that the message was sent"
								},
								{
									"key": "Server",
									"value": "Werkzeug/0.14.1 Python/3.6.1",
									"name": "Server",
									"description": "A name for the server"
								}
							],
							"cookie": [],
							"body": "{\n    \"access_token\": \"eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpYXQiOjE1MjcxODY3NzcsIm5iZiI6MTUyNzE4Njc3NywianRpIjoiZWU3Yjc4MmYtNDIxYy00MjgxLTkzOWUtZmFlODM0ZTk1ZGIyIiwiZXhwIjoxNTI3MTg3Njc3LCJpZGVudGl0eSI6MSwiZnJlc2giOmZhbHNlLCJ0eXBlIjoiYWNjZXNzIn0.CQNpUErWpz2vJ8kbxbEXCb0qssC2ybnSxxvuPZX3khA\"\n}\n"
						},
						{
							"name": "refresh without bearer",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{refresh_token}}",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{url}}/refresh",
									"host": [
										"{{url}}"
									],
									"path": [
										"refresh"
									]
								}
							},
							"status": "UNAUTHORIZED",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Length",
									"value": "44",
									"name": "Content-Length",
									"description": "The length of the response body in octets (8-bit bytes)"
								},
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "The mime type of this content"
								},
								{
									"key": "Date",
									"value": "Thu, 24 May 2018 18:33:09 GMT",
									"name": "Date",
									"description": "The date and time that the message was sent"
								},
								{
									"key": "Server",
									"value": "Werkzeug/0.14.1 Python/3.6.1",
									"name": "Server",
									"description": "A name for the server"
								}
							],
							"cookie": [],
							"body": "{\n  \"msg\": \"Missing Authorization Header\"\n}\n"
						}
					]
				},
				{
					"name": "resend confirmation",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "cf9eae39-5224-4963-a874-ac8c215ec8c8",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{url}}/confirmation/user/1",
							"host": [
								"{{url}}"
							],
							"path": [
								"confirmation",
								"user",
								"1"
							]
						},
						"description": "Send a new confirmation email to the specified user. The previous confirmation will be revoked."
					},
					"response": [
						{
							"name": "resend confirmation",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{url}}/confirmation/user/1",
									"host": [
										"{{url}}"
									],
									"path": [
										"confirmation",
										"user",
										"1"
									]
								}
							},
							"status": "CREATED",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Length",
									"value": "61",
									"name": "Content-Length",
									"description": "The length of the response body in octets (8-bit bytes)"
								},
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "The mime type of this content"
								},
								{
									"key": "Date",
									"value": "Thu, 24 May 2018 18:31:50 GMT",
									"name": "Date",
									"description": "The date and time that the message was sent"
								},
								{
									"key": "Server",
									"value": "Werkzeug/0.14.1 Python/3.6.1",
									"name": "Server",
									"description": "A name for the server"
								}
							],
							"cookie": [],
							"body": "{\n    \"message\": \"Resent confirmation email. Check your inbox.\"\n}\n"
						}
					]
				},
				{
					"name": "delete user by id",
					"request": {
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{url}}/user/1",
							"host": [
								"{{url}}"
							],
							"path": [
								"user",
								"1"
							]
						},
						"description": "Delete a user by its id."
					},
					"response": [
						{
							"name": "delete non-existing user",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"username\": \"jose\",\n\t\"password\": \"1234\"\n}"
								},
								"url": {
									"raw": "{{url}}/user/1",
									"host": [
										"{{url}}"
									],
									"path": [
										"user",
										"1"
									]
								}
							},
							"status": "NOT FOUND",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Length",
									"value": "36",
									"name": "Content-Length",
									"description": "The length of the response body in octets (8-bit bytes)"
								},
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "The mime type of this content"
								},
								{
									"key": "Date",
									"value": "Wed, 23 May 2018 16:14:08 GMT",
									"name": "Date",
									"description": "The date and time that the message was sent"
								},
								{
									"key": "Server",
									"value": "Werkzeug/0.14.1 Python/3.6.1",
									"name": "Server",
									"description": "A name for the server"
								}
							],
							"cookie": [],
							"body": "{\n    \"message\": \"User not found\"\n}\n"
						},
						{
							"name": "delete user successfully",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"username\": \"jose\",\n\t\"password\": \"1234\"\n}"
								},
								"url": {
									"raw": "{{url}}/user/1",
									"host": [
										"{{url}}"
									],
									"path": [
										"user",
										"1"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Length",
									"value": "35",
									"name": "Content-Length",
									"description": "The length of the response body in octets (8-bit bytes)"
								},
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "The mime type of this content"
								},
								{
									"key": "Date",
									"value": "Wed, 23 May 2018 16:13:47 GMT",
									"name": "Date",
									"description": "The date and time that the message was sent"
								},
								{
									"key": "Server",
									"value": "Werkzeug/0.14.1 Python/3.6.1",
									"name": "Server",
									"description": "A name for the server"
								}
							],
							"cookie": [],
							"body": "{\n    \"message\": \"User deleted.\"\n}\n"
						}
					]
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "images",
			"item": [
				{
					"name": "get image",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}"
							}
						],
						"url": {
							"raw": "{{url}}/image/test.jpg",
							"host": [
								"{{url}}"
							],
							"path": [
								"image",
								"test.jpg"
							]
						},
						"description": "Retrieve an image. Each user can only retrieve images in his own folder."
					},
					"response": []
				},
				{
					"name": "upload image",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "multipart/form-data"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "image",
									"value": "",
									"type": "file"
								}
							]
						},
						"url": {
							"raw": "{{url}}/upload/image",
							"host": [
								"{{url}}"
							],
							"path": [
								"upload",
								"image"
							]
						},
						"description": "Upload an image. Only files with allowed extensions (`jpg|jpe|jpeg|png|gif|svg|bmp`) will be uploaded. Duplicate names will be resolved automatically by appending an ingeter after the name. For example, `duplicate_name.jpg` will be converted to `duplicated_name_1.jpg`."
					},
					"response": [
						{
							"name": "upload image",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "multipart/form-data"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{access_token}}"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "image",
											"type": "file",
											"src": []
										}
									]
								},
								"url": {
									"raw": "{{url}}/upload/image",
									"host": [
										"{{url}}"
									],
									"path": [
										"upload",
										"image"
									]
								}
							},
							"status": "CREATED",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Length",
									"value": "48",
									"name": "Content-Length",
									"description": "The length of the response body in octets (8-bit bytes)"
								},
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "The mime type of this content"
								},
								{
									"key": "Date",
									"value": "Fri, 25 May 2018 03:06:15 GMT",
									"name": "Date",
									"description": "The date and time that the message was sent"
								},
								{
									"key": "Server",
									"value": "Werkzeug/0.14.1 Python/3.6.1",
									"name": "Server",
									"description": "A name for the server"
								}
							],
							"cookie": [],
							"body": "{\n    \"message\": \"Image 'myImage.jpg' successfully uploaded.\"\n}\n"
						},
						{
							"name": "upload duplicate image",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "multipart/form-data"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{access_token}}"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "image",
											"type": "file",
											"src": []
										}
									]
								},
								"url": {
									"raw": "{{url}}/upload/image",
									"host": [
										"{{url}}"
									],
									"path": [
										"upload",
										"image"
									]
								}
							},
							"status": "CREATED",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Length",
									"value": "50",
									"name": "Content-Length",
									"description": "The length of the response body in octets (8-bit bytes)"
								},
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "The mime type of this content"
								},
								{
									"key": "Date",
									"value": "Fri, 25 May 2018 03:49:23 GMT",
									"name": "Date",
									"description": "The date and time that the message was sent"
								},
								{
									"key": "Server",
									"value": "Werkzeug/0.14.1 Python/3.6.1",
									"name": "Server",
									"description": "A name for the server"
								}
							],
							"cookie": [],
							"body": "{\n    \"message\": \"Image 'myImage.jpg' successfully uploaded.\"\n}\n"
						}
					]
				},
				{
					"name": "delete image",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{url}}/image/test.jpg",
							"host": [
								"{{url}}"
							],
							"path": [
								"image",
								"test.jpg"
							]
						},
						"description": "Delete an image."
					},
					"response": [
						{
							"name": "delete an image",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{access_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{url}}/image/test.jpg",
									"host": [
										"{{url}}"
									],
									"path": [
										"image",
										"test.jpg"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Length",
									"value": "47",
									"name": "Content-Length",
									"description": "The length of the response body in octets (8-bit bytes)"
								},
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "The mime type of this content"
								},
								{
									"key": "Date",
									"value": "Fri, 25 May 2018 03:50:31 GMT",
									"name": "Date",
									"description": "The date and time that the message was sent"
								},
								{
									"key": "Server",
									"value": "Werkzeug/0.14.1 Python/3.6.1",
									"name": "Server",
									"description": "A name for the server"
								}
							],
							"cookie": [],
							"body": "{\n    \"message\": \"Image 'myImage.jpg' successfully deleted.\"\n}\n"
						},
						{
							"name": "delete non-existing image",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{access_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{url}}/image/test.jpg",
									"host": [
										"{{url}}"
									],
									"path": [
										"image",
										"test.jpg"
									]
								}
							},
							"status": "NOT FOUND",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Length",
									"value": "49",
									"name": "Content-Length",
									"description": "The length of the response body in octets (8-bit bytes)"
								},
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "The mime type of this content"
								},
								{
									"key": "Date",
									"value": "Fri, 25 May 2018 03:55:37 GMT",
									"name": "Date",
									"description": "The date and time that the message was sent"
								},
								{
									"key": "Server",
									"value": "Werkzeug/0.14.1 Python/3.6.1",
									"name": "Server",
									"description": "A name for the server"
								}
							],
							"cookie": [],
							"body": "{\n    \"message\": \"Image was not found.\"\n}\n"
						}
					]
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "6b11a8ae-9913-4b06-ac4c-1abc165633fd",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "d1d589af-7d9b-473e-8fcf-09f244c5a3f3",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "profiles",
			"item": [
				{
					"name": "get profile",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/profile/1",
							"host": [
								"{{url}}"
							],
							"path": [
								"profile",
								"1"
							]
						},
						"description": "Retrieve a user profile picture by user id."
					},
					"response": []
				},
				{
					"name": "upload profile",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "multipart/form-data"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "image",
									"value": "",
									"type": "file"
								}
							]
						},
						"url": {
							"raw": "{{url}}/upload/profile",
							"host": [
								"{{url}}"
							],
							"path": [
								"upload",
								"profile"
							]
						},
						"description": "Upload a user profile picture. The profile picture will be named in predefined format: `user_{id}.{ext}`."
					},
					"response": [
						{
							"name": "upload an avatar without providing image",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "multipart/form-data"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{access_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{url}}/upload/avatar",
									"host": [
										"{{url}}"
									],
									"path": [
										"upload",
										"avatar"
									]
								}
							},
							"status": "BAD REQUEST",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Length",
									"value": "82",
									"name": "Content-Length",
									"description": "The length of the response body in octets (8-bit bytes)"
								},
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "The mime type of this content"
								},
								{
									"key": "Date",
									"value": "Fri, 25 May 2018 04:00:49 GMT",
									"name": "Date",
									"description": "The date and time that the message was sent"
								},
								{
									"key": "Server",
									"value": "Werkzeug/0.14.1 Python/3.6.1",
									"name": "Server",
									"description": "A name for the server"
								}
							],
							"cookie": [],
							"body": "{\n    \"message\": {\n        \"image\": \"Please specify the image to upload.\"\n    }\n}\n"
						},
						{
							"name": "upload an avatar",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "multipart/form-data"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{access_token}}"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "image",
											"type": "file",
											"src": []
										}
									]
								},
								"url": {
									"raw": "{{url}}/upload/avatar",
									"host": [
										"{{url}}"
									],
									"path": [
										"upload",
										"avatar"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Length",
									"value": "49",
									"name": "Content-Length",
									"description": "The length of the response body in octets (8-bit bytes)"
								},
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "The mime type of this content"
								},
								{
									"key": "Date",
									"value": "Fri, 25 May 2018 04:00:30 GMT",
									"name": "Date",
									"description": "The date and time that the message was sent"
								},
								{
									"key": "Server",
									"value": "Werkzeug/0.14.1 Python/3.6.1",
									"name": "Server",
									"description": "A name for the server"
								}
							],
							"cookie": [],
							"body": "{\n    \"message\": \"Avatar user_1.jpg uploaded!\"\n}\n"
						}
					]
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "2e9f7454-74ca-459a-90ee-164ad5a64c94",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "9d4a3d5d-d3d4-494f-80c5-8dbcae89751d",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "items",
			"item": [
				{
					"name": "find item by name",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/item/chair",
							"host": [
								"{{url}}"
							],
							"path": [
								"item",
								"chair"
							]
						},
						"description": "Find an item by its name."
					},
					"response": [
						{
							"name": "get item by name",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{url}}/item/chair",
									"host": [
										"{{url}}"
									],
									"path": [
										"item",
										"chair"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Length",
									"value": "76",
									"name": "Content-Length",
									"description": "The length of the response body in octets (8-bit bytes)"
								},
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "The mime type of this content"
								},
								{
									"key": "Date",
									"value": "Thu, 24 May 2018 18:36:09 GMT",
									"name": "Date",
									"description": "The date and time that the message was sent"
								},
								{
									"key": "Server",
									"value": "Werkzeug/0.14.1 Python/3.6.1",
									"name": "Server",
									"description": "A name for the server"
								}
							],
							"cookie": [],
							"body": "{\n    \"id\": 1,\n    \"name\": \"chair\",\n    \"price\": 12.99,\n    \"store_id\": 1\n}\n"
						}
					]
				},
				{
					"name": "get all items",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/items",
							"host": [
								"{{url}}"
							],
							"path": [
								"items"
							]
						},
						"description": "Get a list of all items."
					},
					"response": [
						{
							"name": "get all items",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{url}}/items",
									"host": [
										"{{url}}"
									],
									"path": [
										"items"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Length",
									"value": "276",
									"name": "Content-Length",
									"description": "The length of the response body in octets (8-bit bytes)"
								},
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "The mime type of this content"
								},
								{
									"key": "Date",
									"value": "Thu, 24 May 2018 18:41:27 GMT",
									"name": "Date",
									"description": "The date and time that the message was sent"
								},
								{
									"key": "Server",
									"value": "Werkzeug/0.14.1 Python/3.6.1",
									"name": "Server",
									"description": "A name for the server"
								}
							],
							"cookie": [],
							"body": "{\n    \"items\": [\n        {\n            \"id\": 1,\n            \"name\": \"chair\",\n            \"price\": 20.99,\n            \"store_id\": 1\n        },\n        {\n            \"id\": 2,\n            \"name\": \"piano\",\n            \"price\": 2000.99,\n            \"store_id\": 1\n        }\n    ]\n}\n"
						}
					]
				},
				{
					"name": "get all items of a priority number",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/items/show_priority/1",
							"host": [
								"{{url}}"
							],
							"path": [
								"items",
								"show_priority",
								"1"
							]
						},
						"description": "Get a list of all items."
					},
					"response": [
						{
							"name": "get all items",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{url}}/items",
									"host": [
										"{{url}}"
									],
									"path": [
										"items"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Length",
									"value": "276",
									"name": "Content-Length",
									"description": "The length of the response body in octets (8-bit bytes)"
								},
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "The mime type of this content"
								},
								{
									"key": "Date",
									"value": "Thu, 24 May 2018 18:41:27 GMT",
									"name": "Date",
									"description": "The date and time that the message was sent"
								},
								{
									"key": "Server",
									"value": "Werkzeug/0.14.1 Python/3.6.1",
									"name": "Server",
									"description": "A name for the server"
								}
							],
							"cookie": [],
							"body": "{\n    \"items\": [\n        {\n            \"id\": 1,\n            \"name\": \"chair\",\n            \"price\": 20.99,\n            \"store_id\": 1\n        },\n        {\n            \"id\": 2,\n            \"name\": \"piano\",\n            \"price\": 2000.99,\n            \"store_id\": 1\n        }\n    ]\n}\n"
						}
					]
				},
				{
					"name": "create an item",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"price\": 12.99,\n  \"priority\": 1,\n  \"shopping_list_id\": 1\n}"
						},
						"url": {
							"raw": "{{url}}/item/chair",
							"host": [
								"{{url}}"
							],
							"path": [
								"item",
								"chair"
							]
						},
						"description": "Create a new item."
					},
					"response": [
						{
							"name": "post item without Bearer",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{access_token}}",
										"disabled": true
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"price\": 12.99,\n  \"store_id\": 1\n}"
								},
								"url": {
									"raw": "{{url}}/item/chair",
									"host": [
										"{{url}}"
									],
									"path": [
										"item",
										"chair"
									]
								}
							},
							"status": "UNAUTHORIZED",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Length",
									"value": "44",
									"name": "Content-Length",
									"description": "The length of the response body in octets (8-bit bytes)"
								},
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "The mime type of this content"
								},
								{
									"key": "Date",
									"value": "Thu, 24 May 2018 18:35:25 GMT",
									"name": "Date",
									"description": "The date and time that the message was sent"
								},
								{
									"key": "Server",
									"value": "Werkzeug/0.14.1 Python/3.6.1",
									"name": "Server",
									"description": "A name for the server"
								}
							],
							"cookie": [],
							"body": "{\n  \"msg\": \"Missing Authorization Header\"\n}\n"
						},
						{
							"name": "post item with duplicate name",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{access_token}}"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"price\": 12.99,\n  \"store_id\": 1\n}"
								},
								"url": {
									"raw": "{{url}}/item/chair",
									"host": [
										"{{url}}"
									],
									"path": [
										"item",
										"chair"
									]
								}
							},
							"status": "BAD REQUEST",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Length",
									"value": "61",
									"name": "Content-Length",
									"description": "The length of the response body in octets (8-bit bytes)"
								},
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "The mime type of this content"
								},
								{
									"key": "Date",
									"value": "Thu, 24 May 2018 18:35:07 GMT",
									"name": "Date",
									"description": "The date and time that the message was sent"
								},
								{
									"key": "Server",
									"value": "Werkzeug/0.14.1 Python/3.6.1",
									"name": "Server",
									"description": "A name for the server"
								}
							],
							"cookie": [],
							"body": "{\n    \"message\": \"An item with name chair already exists.\"\n}\n"
						},
						{
							"name": "post item with non-fresh token",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{access_token}}"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"price\": 12.99,\n  \"store_id\": 1\n}"
								},
								"url": {
									"raw": "{{url}}/item/chair",
									"host": [
										"{{url}}"
									],
									"path": [
										"item",
										"chair"
									]
								}
							},
							"status": "UNAUTHORIZED",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Length",
									"value": "36",
									"name": "Content-Length",
									"description": "The length of the response body in octets (8-bit bytes)"
								},
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "The mime type of this content"
								},
								{
									"key": "Date",
									"value": "Thu, 24 May 2018 18:35:49 GMT",
									"name": "Date",
									"description": "The date and time that the message was sent"
								},
								{
									"key": "Server",
									"value": "Werkzeug/0.14.1 Python/3.6.1",
									"name": "Server",
									"description": "A name for the server"
								}
							],
							"cookie": [],
							"body": "{\n  \"msg\": \"Fresh token required\"\n}\n"
						},
						{
							"name": "post item by name",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{access_token}}"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"price\": 12.99,\n  \"store_id\": 1\n}"
								},
								"url": {
									"raw": "{{url}}/item/chair",
									"host": [
										"{{url}}"
									],
									"path": [
										"item",
										"chair"
									]
								}
							},
							"status": "CREATED",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Length",
									"value": "76",
									"name": "Content-Length",
									"description": "The length of the response body in octets (8-bit bytes)"
								},
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "The mime type of this content"
								},
								{
									"key": "Date",
									"value": "Thu, 24 May 2018 18:34:22 GMT",
									"name": "Date",
									"description": "The date and time that the message was sent"
								},
								{
									"key": "Server",
									"value": "Werkzeug/0.14.1 Python/3.6.1",
									"name": "Server",
									"description": "A name for the server"
								}
							],
							"cookie": [],
							"body": "{\n    \"id\": 1,\n    \"name\": \"chair\",\n    \"price\": 12.99,\n    \"store_id\": 1\n}\n"
						}
					]
				},
				{
					"name": "update an item",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"price\": 20.99,\n  \"priority\": 2,\n  \"store_id\": 1\n}"
						},
						"url": {
							"raw": "{{url}}/item/chair",
							"host": [
								"{{url}}"
							],
							"path": [
								"item",
								"chair"
							]
						},
						"description": "Create or update an item. If is update, only the item price will get updated."
					},
					"response": [
						{
							"name": "upsert an item",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"price\": 20.99,\n  \"store_id\": 1\n}"
								},
								"url": {
									"raw": "{{url}}/item/chair",
									"host": [
										"{{url}}"
									],
									"path": [
										"item",
										"chair"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Length",
									"value": "76",
									"name": "Content-Length",
									"description": "The length of the response body in octets (8-bit bytes)"
								},
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "The mime type of this content"
								},
								{
									"key": "Date",
									"value": "Thu, 24 May 2018 18:40:24 GMT",
									"name": "Date",
									"description": "The date and time that the message was sent"
								},
								{
									"key": "Server",
									"value": "Werkzeug/0.14.1 Python/3.6.1",
									"name": "Server",
									"description": "A name for the server"
								}
							],
							"cookie": [],
							"body": "{\n    \"id\": 1,\n    \"name\": \"chair\",\n    \"price\": 20.99,\n    \"store_id\": 1\n}\n"
						},
						{
							"name": "create an item",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"price\": 2000.99,\n  \"store_id\": 1\n}"
								},
								"url": {
									"raw": "{{url}}/item/piano",
									"host": [
										"{{url}}"
									],
									"path": [
										"item",
										"piano"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Length",
									"value": "78",
									"name": "Content-Length",
									"description": "The length of the response body in octets (8-bit bytes)"
								},
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "The mime type of this content"
								},
								{
									"key": "Date",
									"value": "Thu, 24 May 2018 18:40:52 GMT",
									"name": "Date",
									"description": "The date and time that the message was sent"
								},
								{
									"key": "Server",
									"value": "Werkzeug/0.14.1 Python/3.6.1",
									"name": "Server",
									"description": "A name for the server"
								}
							],
							"cookie": [],
							"body": "{\n    \"id\": 2,\n    \"name\": \"piano\",\n    \"price\": 2000.99,\n    \"store_id\": 1\n}\n"
						}
					]
				},
				{
					"name": "delete item by name",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{url}}/item/chair",
							"host": [
								"{{url}}"
							],
							"path": [
								"item",
								"chair"
							]
						},
						"description": "Delete an item by name."
					},
					"response": [
						{
							"name": "delete item by name",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{access_token}}"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{url}}/item/chair",
									"host": [
										"{{url}}"
									],
									"path": [
										"item",
										"chair"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Length",
									"value": "35",
									"name": "Content-Length",
									"description": "The length of the response body in octets (8-bit bytes)"
								},
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "The mime type of this content"
								},
								{
									"key": "Date",
									"value": "Thu, 24 May 2018 18:38:33 GMT",
									"name": "Date",
									"description": "The date and time that the message was sent"
								},
								{
									"key": "Server",
									"value": "Werkzeug/0.14.1 Python/3.6.1",
									"name": "Server",
									"description": "A name for the server"
								}
							],
							"cookie": [],
							"body": "{\n    \"message\": \"Item deleted.\"\n}\n"
						},
						{
							"name": "delete non-existing item",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{access_token}}"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{url}}/item/chairs",
									"host": [
										"{{url}}"
									],
									"path": [
										"item",
										"chairs"
									]
								}
							},
							"status": "NOT FOUND",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Length",
									"value": "37",
									"name": "Content-Length",
									"description": "The length of the response body in octets (8-bit bytes)"
								},
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "The mime type of this content"
								},
								{
									"key": "Date",
									"value": "Thu, 24 May 2018 18:38:47 GMT",
									"name": "Date",
									"description": "The date and time that the message was sent"
								},
								{
									"key": "Server",
									"value": "Werkzeug/0.14.1 Python/3.6.1",
									"name": "Server",
									"description": "A name for the server"
								}
							],
							"cookie": [],
							"body": "{\n    \"message\": \"Item not found.\"\n}\n"
						}
					]
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "shopping lists",
			"item": [
				{
					"name": "get all shopping lists",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/shopping_lists",
							"host": [
								"{{url}}"
							],
							"path": [
								"shopping_lists"
							]
						}
					},
					"response": []
				},
				{
					"name": "find a shopping list by name",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/shopping_list/Wish List",
							"host": [
								"{{url}}"
							],
							"path": [
								"shopping_list",
								"Wish List"
							]
						}
					},
					"response": []
				},
				{
					"name": "create a new shopping list",
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{url}}/shopping_list/Wish List",
							"host": [
								"{{url}}"
							],
							"path": [
								"shopping_list",
								"Wish List"
							]
						}
					},
					"response": []
				},
				{
					"name": "delete store by name",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{url}}/shopping_list/Wish List",
							"host": [
								"{{url}}"
							],
							"path": [
								"shopping_list",
								"Wish List"
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"id": "71cb1f37-7b8f-4e6c-bea1-68976dfee69b",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"id": "db6c7dcb-0302-44aa-a11b-1e4d417e1d18",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"id": "0ae08000-19ed-4494-aa05-f3b427df62bb",
			"key": "url",
			"value": "127.0.0.1:5000"
		},
		{
			"id": "1aebf1c6-982d-48b1-8071-55c89790db90",
			"key": "test_email",
			"value": "your@email_address.com"
		}
	],
	"protocolProfileBehavior": {}
}